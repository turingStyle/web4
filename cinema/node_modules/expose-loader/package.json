{
  "_from": "expose-loader",
  "_id": "expose-loader@0.7.3",
  "_inBundle": false,
  "_integrity": "sha1-NfvTZZeJ5PqoH1nei36fw55GbVE=",
  "_location": "/expose-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "expose-loader",
    "fetchSpec": "latest",
    "name": "expose-loader",
    "raw": "expose-loader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/expose-loader/-/expose-loader-0.7.3.tgz",
  "_shasum": "35fbd3659789e4faa81f59de8b7e9fc39e466d51",
  "_shrinkwrap": null,
  "_spec": "expose-loader",
  "_where": "F:\\web4\\cinema",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/expose-loader/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "expose loader module for webpack",
  "devDependencies": {},
  "homepage": "https://github.com/webpack/expose-loader#readme",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "name": "expose-loader",
  "optionalDependencies": {},
  "readme": "# expose loader for webpack\n\nThe expose loader adds modules to the global object. This is useful\nfor debugging, or supporting libraries that depend on libraries in\nglobals.\n\n**Note**: Modules must be `require()`'d within in your bundle, or they will not\nbe exposed.\n\n## Usage\n\n``` javascript\nrequire(\"expose-loader?libraryName!./file.js\");\n// Exposes the exports for file.js to the global context on property \"libraryName\".\n// In web browsers, window.libraryName is then available.\n```\n\nThis line works to expose React to the web browser to enable the Chrome React devtools:\n\n```\nrequire(\"expose-loader?React!react\");\n```\n\nThus, `window.React` is then available to the Chrome React devtools extension.\n\nAlternately, you can set this in your config file:\n\n```\nmodule: {\n  loaders: [\n    { test: require.resolve(\"react\"), loader: \"expose-loader?React\" }\n  ]\n}\n```\nAlso for multiple expose you can use `!` in loader string:\n```\nmodule: {\n  loaders: [\n    { test: require.resolve(\"jquery\"), loader: \"expose-loader?$!expose-loader?jQuery\" },\n  ]\n}\n```\n\nThe `require.resolve` is a node.js call (unrelated to `require.resolve` in webpack\nprocessing -- check the node.js docs instead). `require.resolve` gives you the\nabsolute path to the module (\"/.../app/node_modules/react/react.js\"). So the\nexpose only applies to the react module. And it's only exposed when used in the\nbundle.\n\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/webpack/expose-loader.git"
  },
  "version": "0.7.3"
}
