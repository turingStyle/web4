{
  "_from": "bootstrap-loader",
  "_id": "bootstrap-loader@2.1.0",
  "_inBundle": false,
  "_integrity": "sha1-bkWW7riQ7c/Ybk9Ark47leXO4no=",
  "_location": "/bootstrap-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bootstrap-loader",
    "fetchSpec": "latest",
    "name": "bootstrap-loader",
    "raw": "bootstrap-loader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/bootstrap-loader/-/bootstrap-loader-2.1.0.tgz",
  "_shasum": "6e4596eeb890edcfd86e4f40ae4e3b95e5cee27a",
  "_shrinkwrap": null,
  "_spec": "bootstrap-loader",
  "_where": "F:\\web4\\cinema",
  "authors": [
    "Justin Gordon <justin.gordon@gmail.com> (https://github.com/justin808)",
    "Alex Fedoseev <alex.fedoseev@gmail.com> (https://github.com/alexfedoseev)"
  ],
  "bugs": {
    "url": "https://github.com/shakacode/bootstrap-loader/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "chalk": "^1.1.3",
    "escape-regexp": "0.0.1",
    "exports-loader": "^0.6.3",
    "js-yaml": "^3.7.0",
    "loader-utils": "^1.0.2",
    "resolve": "^1.1.7",
    "semver": "^5.3.0",
    "strip-json-comments": "^2.0.1"
  },
  "deprecated": false,
  "description": "Boostrap for Webpack",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-cli": "^6.18.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-tape-runner": "^2.0.1",
    "eslint": "^3.10.2",
    "eslint-config-shakacode": "13.2.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.6.0",
    "extract-text-webpack-plugin": "^2.1.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.3",
    "webpack": "^2.2.0"
  },
  "homepage": "https://github.com/shakacode/bootstrap-loader#readme",
  "keywords": [
    "bootstrap",
    "twitter"
  ],
  "license": "MIT",
  "main": "loader.js",
  "name": "bootstrap-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "css-loader": "*",
    "extract-text-webpack-plugin": ">=2.1.0",
    "node-sass": "*",
    "resolve-url-loader": "*",
    "sass-loader": "*",
    "url-loader": "*",
    "webpack": ">=2.2.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/shakacode/react_on_rails.svg?branch=master)](https://travis-ci.org/shakacode/react_on_rails)\n[![npm version](https://badge.fury.io/js/bootstrap-loader.svg)](https://badge.fury.io/js/bootstrap-loader)\n\nIf you're using this project and you like it, please give us a star! Thanks!\n\nAloha from Justin Gordon ([bio](http://www.railsonmaui.com/about)) and the [ShakaCode](http://www.shakacode.com) Team! We're actively looking for new projects involving React, React-Native, and Rails. Please [contact me](mailto:justin@shakacode.com) if we could potentially help you in any way. Besides consulting on bigger projects, [ShakaCode](http://www.shakacode.com) is doing ScreenHero plus Slack/Github based coaching for React on Rails. See our blog post [Can ShakaCode Help You?](https://blog.shakacode.com/can-shakacode-help-you-4a5b1e5a8a63#.jex6tg9w9) for more information. \n\nI'm offering a free half-hour project consultation, on anything from React on Rails to any aspect of web application development for both consumer and enterprise products. In addition to React.js and Rails, we're doing React-Native iOS and Android apps!\n\nWhether you have a new project or need help on an existing project, feel free to contact me directly at [justin@shakacode.com](mailto:justin@shakacode.com) and thanks in advance for any referrals!\n\nYour support keeps this project going!\n\n(Want to become a contributor? [Contact us](mailto:contact@shakacode.com) for a Slack room invite and let us know that you want to contribute.)\n\n# ShakaCode Community\nPlease [Subscribe](https://app.mailerlite.com/webforms/landing/l1d9x5) to keep in touch with Justin Gordon and [ShakaCode](http://www.shakacode.com/). I intend to send a monthly summary including announcements of new releases of bootstrap-loader and React on Rails and of our latest [blog articles](https://blog.shakacode.com) and tutorials. Subscribers will also have access to **exclusive content**, including tips and examples.\n\n[![2017-01-31_14-16-56](https://cloud.githubusercontent.com/assets/1118459/22490211/f7a70418-e7bf-11e6-9bef-b3ccd715dbf8.png)](https://app.mailerlite.com/webforms/landing/l1d9x5)\n\n* **Slack Room**: [Contact us](mailto:contact@shakacode.com) for an invite to the ShakaCode Slack room!\n* **[forum.shakacode.com](https://forum.shakacode.com)**: Post your questions\n* **[@ShakaCode on Twitter](https://twitter.com/shakacode)**\n\n## React on Rails Info\n**[React on Rails](https://github.com/shakacode/react_on_rails)** is ShakaCode's flagship product. We want to make sure you're aware of it!\n\n### Testimonials\nFrom Joel Hooks, Co-Founder, Chief Nerd at [egghead.io](https://egghead.io/), January 30, 2017: \n![2017-01-30_11-33-59](https://cloud.githubusercontent.com/assets/1118459/22443635/b3549fb4-e6e3-11e6-8ea2-6f589dc93ed3.png)\n\nFor more testimonials, see [Live Projects](https://github.com/shakacode/react_on_rails/blob/master/PROJECTS.md) and [Kudos](https://github.com/shakacode/react_on_rails/blob/master/KUDOS.md).\n\n# boostrap-loader v2 Docs!\nIf you want the v1 docs which are compatible with Webpack v1, please see the [v1 branch](https://github.com/shakacode/bootstrap-loader/tree/v1). If you're using v2, be sure to check the peer dependencies of `webpack` and the `extract-text-webpack-plugin` in the [package.json](./package.json).\n\n# bootstrap-loader\n\nSuccessor to [bootstrap-sass-loader](https://github.com/shakacode/bootstrap-sass-loader). Load Bootstrap styles and scripts in your Webpack bundle. This loader uses SASS to process CSS styles. Bootstrap 3 & 4 are supported.\n\n**NOTE:** [Bootstrap 4](http://v4-alpha.getbootstrap.com/), (twbs/bootstrap)[https://github.com/twbs/bootstrap] is currently in alpha right now. Bootstrap 4 definitely worked when we first released this package. The parent company of this product, [ShakaCode](http://www.shakacode.com) had originally planned to use it for our upcoming commercial product, but we decided that Bootstrap 4 was changing too fast for a production product. Thus, we're still using Bootstrap 3, and we're not actively developing with Bootstrap 4. Consequently, for Bootstrap 4 issues, we need one of:\n\n1. Community support to help us with Bootstrap 4 issues and pull requests.\n2. We'd be thrilled to have another maintainer join us to help with Bootstrap 4 issues.\n3. We'd also be thrilled if any companies are open to sponsoring the development of features and issues regarding Bootstrap 4.\n \nThat being said, Bootstrap 4 probably works just fine! You must use `4.0.0-alpha.6` or greater.\n\n## NEWS\n???: Released 2.1.0. This release supports Bootstrap 4.0.0-alpha.6 instead of 4.0.0-alpha.4.\n\n2017-03-15: Released 2.0.0. All examples in /examples are updated for Webpack v2 and yarn. We're not supporting beta versions of Webpack. Some older releases did support it. So if you upgrade, you have to update for the new 2.2.x+ version of Webpack.\n\n2016-10-30: Released 1.3.0. Supports multiple config files in one build.\n\n2016-10-02: Released 2.0.0-beta.12. Supports isomorphic-style-loader and disabling SASS source map and/or resolve-url-loader injection!\n\n2016-09-10: Released 2.0.0-beta.11 with support for Bootstrap 4, alpha 4!\n\n\n## Table of Contents\n\n+ [Installation](#installation)\n+ [Usage](#usage)\n  - [Bootstrap 4 internal dependency solution](#bootstrap-4-internal-dependency-solution)\n+ [Examples](#examples)\n+ [Common configuration options](#common-configuration-options)\n  - [Bootstrap 3 & 4](#bootstrap-3-4)\n  - [Bootstrap 4 only](#bootstrap-4-only)\n    * [Tether](#tether)\n    * [PostCSS](#postcss)\n    * [Glyphicon alternatives](#glyphicon-alternatives)\n+ [Additional configurations](#additional-configurations)\n  - [Paths to custom assets](#paths-to-custom-assets)\n  - [Incorporating Bootswatch themes](#incorporating-bootswatch-themes)\n  - [jQuery](#jquery)\n  - [Icon fonts](#icon-fonts)\n+ [FAQ](#faq)\n  - [Using Bootstrap mixins and variables](#using-bootstrap-mixins-and-variables)\n+ [Contributing](#contributing)\n+ [License](#license)\n+ [Examples and related libraries](#examples-and-related-libraries)\n+ [Useful Q&A](#useful-qa)\n\n## Installation\nGet it via npm:\n\n```bash\nnpm install bootstrap-loader\n```\n\nDon't forget to install these dependencies (use `--save or --save-dev` option per your needs to update your `package.json`):\n\n```bash\n# Bootstrap 3\nnpm install --save-dev bootstrap-sass\n\n# or Bootstrap 4\nnpm install --save-dev bootstrap@v4.0.0-alpha.6\n\n# Note, alpha.3 is broken, and alpha.2 is no longer supported\n\n# Node SASS & other loaders needed to handle styles\nnpm install --save-dev css-loader node-sass resolve-url-loader sass-loader style-loader url-loader\n\n# Additional loaders required for Bootstrap 4 & Webpack 2\nnpm install --save-dev imports-loader exports-loader\n```\n\nIf you're using Bootstrap 4, you probably need:\n\n```bash\nnpm install --save-dev postcss-loader\n```\n\n\n## Usage\nSimply require it:\n\n```js\nrequire('bootstrap-loader');\n```\n\nOr add `bootstrap-loader` as [a module in an entry point](https://webpack.github.io/docs/configuration.html#entry) in your webpack config (you'll need Webpack 2.1 beta and higher):\n\n```js\nentry: [ 'bootstrap-loader', './app' ]\n```\n\nConfig is optional. If used, by default it should be placed in your project's root dir with name `.bootstraprc`. You can write it in `YAML` or `JSON` formats. Take a look at the default config files for [Bootstrap 3](.bootstraprc-3-default) and [Bootstrap 4](.bootstraprc-4-default). Note, we recommend using a configuration or else you might pick up unwanted upgrades, such as when we make Bootstrap 4 the default. Config options don't fall back on the defaults once a config file is present. Be sure not to delete config options. To start with a custom config, copy over a default config file as a starting point.\n\nIf the default location doesn't work for you (e.g. you want to create multiple bootstrap configs for branding variations or you symlink your npm_modules directory), you may pass the **absolute path** of the `.bootstraprc` file to the loader in your webpack config, e.g. `bootstrap-loader/lib/bootstrap.loader?extractStyles&configFilePath=${__dirname}/.bootstraprc!bootstrap-loader/no-op.js`.\n\nNote that :`__dirname` is a [global variable](https://nodejs.org/docs/latest/api/globals.html#globals_dirname) that Node sets for us. It is \"the name of the directory that the currently executing script resides in.\"\n\n```yaml\n---\n# You can use comments here\nuseFlexbox: true\n\nstyleLoaders:\n  - style-loader\n  - css-loader\n  - sass-loader\n\nstyles:\n  normalize: true\n  print: true\n\nscripts:\n  alert: true\n  button: true\n```\n\n```js\n{\n  // And JSON comments also!\n  \"useFlexbox\": true,\n\n  \"styleLoaders\": [\"style-loader\", \"css-loader\", \"sass-loader\"],\n\n  \"styles\": {\n    \"normalize\": true,\n    \"print\": true\n  },\n\n  \"scripts\": {\n    \"alert\": true,\n    \"button\": true\n  }\n}\n```\n\nIf no config provided, default one for Bootstrap 3 will be used.\n\n### Bootstrap 4 internal dependency solution\n\nBecause of Bootstrap 4's removal of UMD, internal dependencies, such as Popover's dependencies on Tooltip and Dropdown's dependency on Utils, are no longer naively resolved by Webpack (See Issue [#172](https://github.com/shakacode/bootstrap-loader/issues/172). In order to solve this issue, add the following code to your webpack configuration:\n```\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    \"window.jQuery\": \"jquery\",\n    Tether: \"tether\",\n    \"window.Tether\": \"tether\",\n    Alert: \"exports-loader?Alert!bootstrap/js/dist/alert\",\n    Button: \"exports-loader?Button!bootstrap/js/dist/button\",\n    Carousel: \"exports-loader?Carousel!bootstrap/js/dist/carousel\",\n    Collapse: \"exports-loader?Collapse!bootstrap/js/dist/collapse\",\n    Dropdown: \"exports-loader?Dropdown!bootstrap/js/dist/dropdown\",\n    Modal: \"exports-loader?Modal!bootstrap/js/dist/modal\",\n    Popover: \"exports-loader?Popover!bootstrap/js/dist/popover\",\n    Scrollspy: \"exports-loader?Scrollspy!bootstrap/js/dist/scrollspy\",\n    Tab: \"exports-loader?Tab!bootstrap/js/dist/tab\",\n    Tooltip: \"exports-loader?Tooltip!bootstrap/js/dist/tooltip\",\n    Util: \"exports-loader?Util!bootstrap/js/dist/util\",\n  })\n]\n```\n\n## Examples\nCheck out example apps in [`examples/`](examples) folder:\n\n* Basic usage: [examples/basic](examples/basic)\n * See the `npm run bs4:customlocation` tasks for examples on how to pass your .bootstraprc config.\n* With CSS Modules: [examples/css-modules](examples/css-modules) (This example shows off hot reloading with Babel 6 as well!)\n* With multiple entries [examples/multiple-entries](examples/multiple-entries) with their own config.\n\n## Common configuration options\nHere are common options for Bootstrap 3 & 4.\n\n### Bootstrap 3 & 4\n\n#### `loglevel`\n\nDefault: `disabled`\n\nOutputs debugging info. Set this option to `debug` to output debugging information. This is critical for debugging issues. The output will go to your webpack console.\n\n```yaml\nloglevel: debug\n```\n\n#### `bootstrapVersion`\n\nDefault: `3`\n\nMajor version of Bootstrap. Can be 3 or 4.\n\n```yaml\nbootstrapVersion: 3\n```\n\n#### `styleLoaders`\n\nDefault: `[ 'style-loader', 'css-loader', 'sass-loader' ]`\n\nArray of webpack loaders. `sass-loader` is required, order matters. In most cases the style loader should definitely go first and the sass loader should be last.\n\nNote: Beginning with Webpack v2.1.0-beta.26, the '-loader' suffix is required for all loaders.\nTo maintain compatibility with older versions, all accepted style loaders (style, css, postcss, sass, resolve-url) are automatically appended with '-loader'.\nIt is recommended that you explicitly state the '-loader' suffix for every webpack loader in `styleLoaders` to ensure compatibility in the long term.\n\n```yaml\nstyleLoaders:\n  - style-loader\n  - css-loader\n  - sass-loader\n\n# You can apply loader params here:\n  - sass-loader?outputStyle=expanded\n```\n\nDifferent settings for different environments can be used.\n```yaml\n# It depends on value of NODE_ENV environment variable\nenv:\n  development:\n    styleLoaders:\n      - style-loader\n      - css-loader\n      - resolve-url-loader\n      - sass-loader\n  production:\n    styleLoaders:\n      - style-loader\n      - css-loader\n      - sass-loader\n```\n\n#### `extractStyles`\n\nDefault: `false`\n\nExtract styles to stand-alone css file using `extract-text-webpack-plugin` version 2.0.0-beta or higher. See [extract-text-plugin](https://github.com/webpack/extract-text-webpack-plugin) for more details.\n\n```yaml\nextractStyles: false\n\n# Different settings for different environments can be used,\n# It depends on value of NODE_ENV environment variable\nenv:\n  development:\n    extractStyles: false\n  production:\n    extractStyles: true\n```\n\nThis param can also be set to `true` in webpack config:\n\n```js\nentry: [ 'bootstrap-loader/extractStyles', './app' ]\n```\n\nSee [shakacode/react-webpack-rails-tutorial/blob/master/client/webpack.client.rails.build.config.](https://github.com/shakacode/react-webpack-rails-tutorial/blob/master/client/webpack.client.rails.build.config.js) for a working example which is deployed to [www.reactrails.com](http://www.reactrails.com/).\n\n#### `preBootstrapCustomizations`\n\nDefault: `disabled`\n\nCustomize Bootstrap variables that get imported before the original Bootstrap variables. Thus, derived Bootstrap variables can depend on values from here. See the Bootstrap [`_variables.scss`](https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss) file for examples of derived Bootstrap variables.\n\n```yaml\npreBootstrapCustomizations: ./path/to/bootstrap/pre-customizations.scss\n```\n\n#### `bootstrapCustomizations`\n\nDefault: `disabled`\n\nThis gets loaded after bootstrap variables is loaded. Thus, you may customize Bootstrap variables based on the values established in the Bootstrap [`_variables.scss`](https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss) file. Note, if `bootstrap` did not have derived values, it would not be necessary to have two config files for customizing bootstrap values.\n\nIf you want your bootstrap override value to apply to derived variable values, then place your customizations in `preBootstrapCustomizations`. If you want to be sure your changes don't affect other derived values, place the changes in bootstrapCustomizations.\n\nIf you are not sure, you can probably simply use `preBootstrapCustomizations` and, if you have issues, see [`_variables.scss`](https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss) for derived values.\n\n```yaml\nbootstrapCustomizations: ./path/to/bootstrap/customizations.scss\n```\n\n#### `appStyles`\n\nDefault: `disabled`\n\nImport your custom styles here. Usually this endpoint-file contains list of `@imports` of your application styles.\n\n```yaml\nappStyles: ./path/to/your/app/styles/endpoint.scss\n```\n\n#### `styles`\n\nDefault: all\n\nBootstrap styles.\n\n```yaml\nstyles:\n  mixins: true\n  normalize: true\n  ...\n\n# or enable/disable all of them:\nstyles: true / false\n```\n\n#### `scripts`\n\nDefault: all\n\nBootstrap scripts.\n\n```yaml\nscripts:\n  transition: true\n  alert: true\n  ...\n\n# or enable/disable all of them:\nscripts: true / false\n```\n\n#### `useCustomIconFontPath`\n\nDefault: false\n\nIf you're using a custom icon font and you need to specify its path (`$icon-font-path`) in your Sass files, set this option to true.\n\n```yaml\nuseCustomIconFontPath: true / false\n```\n\n```\n$icon-font-path: ../fonts // relative to your Sass file\n$icon-font-name: 'glyphicons' // you'll typically want to change this too.\n```\n\n\n### Bootstrap 4 only\nThere is only one additional option for Bootstrap 4:\n\n#### `useFlexbox`\n\nDefault: `true`\n\nEnable / disable flexbox model.\n\n```yaml\nuseFlexbox: true\n```\n\n#### Tether\nAdditionally, Bootstrap 4 requires Tether. You can add Tether per the examples in the `/examples` directory.\n\n1. Add tether to package.json: `npm i --save tether`\n2. Add tether as an entry point to your webpack config.\n3. Add this plugin to your webpack config:\n\n```\n  plugins: [\n    new ExtractTextPlugin('app.css', { allChunks: true }),\n    new webpack.ProvidePlugin({\n      \"window.Tether\": \"tether\"\n    }),\n  ],\n```\n\n#### PostCSS\nBootstrap 4 seems to require postcss:\n\n1. Add postcss and the the postcss-loader: `npm i --save postcss postcss-loader`\n2. Put `postcss` before `sass` in the order of loaders in your `.bootstraprc` file.\n\n#### Glyphicon alternatives\nGlyphicons have been removed from Bootstrap 4. The examples demonstrate how to use the font-awesome-loader\n\n## Additional configurations\n\n#### Paths to custom assets\nIf you use `bootstrap-loader` to load your styles (via `preBootstrapCustomizations`, `bootstrapCustomizations` & `appStyles`) and you load custom assets (fonts, images etc.), then you can use relative paths inside `url` method (relative to SASS file, from which you load asset).\n\nThis was made possible thanks to [resolve-url-loader](https://github.com/bholloway/resolve-url-loader). In common case you don't have to do anything special to apply it — we are doing it internally (just don't forget to install it). But if you want to use its custom settings, please provide it explicitly via `styleLoaders` option in `.bootstraprc`:\n\n```yaml\nstyleLoaders:\n  - style-loader\n  - css-loader?sourceMap\n  - resolve-url-loader?sourceMap\n  - sass-loader?sourceMap\n```\n\n#### Incorporating Bootswatch themes\nThe following steps are needed to successfully incorporate a theme from Bootswatch:\n\n1. Download the `.scss` files (`_variables.scss` and `_bootswatch.scss`) for the theme you have chosen.\n2. Put the files somewhere in your project structure (e.g. the `./styles` directory).\n3. Add an additional SCSS file, like bs-theme.scss, that contains the following:\n   ```\n   @import './_bootswatch.scss';\n   ```\n\n4. Add the following to your .bootstraprc file:\n  ```\n  preBootstrapCustomizations: ./styles/_variables.scss\n  appStyles: ./styles/bs-theme.scss\n  ```\nThe theme should now be applied as expected.\nNote that this section might be valid for other theme packs as well.\n\n#### jQuery\nIf you want to use Bootstrap's JS scripts — you have to provide `jQuery` to Bootstrap JS modules using `imports-loader`. To avoid having to include `jQuery` in your project you can disable all scripts (see [scripts](#scripts)).\n\n```js\nmodule: {\n  loaders: [\n    // Use one of these to serve jQuery for Bootstrap scripts:\n\n    // Bootstrap 3\n    { test:/bootstrap-sass[\\/\\\\]assets[\\/\\\\]javascripts[\\/\\\\]/, loader: 'imports-loader?jQuery=jquery' },\n\n    // Bootstrap 4\n    { test: /bootstrap[\\/\\\\]dist[\\/\\\\]js[\\/\\\\]umd[\\/\\\\]/, loader: 'imports-loader?jQuery=jquery' },\n  ],\n},\n```\n\nNote: if you're not concerned about Windows, the lines look like this (simpler regexp pattern):\n\n```js\n// Boostrap 3\n{ test: /bootstrap-sass\\/assets\\/javascripts\\//, loader: 'imports-loader?jQuery=jquery' },\n\n// Bootstrap 4\n{ test: /bootstrap\\/dist\\/js\\/umd\\//, loader: 'imports-loader?jQuery=jquery' },\n```\n\n\n#### Icon fonts\nBootstrap uses **icon fonts**. If you want to load them, don't forget to setup `url-loader` or `file-loader` in webpack config:\n\n```js\nmodule: {\n  loaders: [\n    { test: /\\.(woff2?|svg)$/, loader: 'url-loader?limit=10000' },\n    { test: /\\.(ttf|eot)$/, loader: 'file-loader' },\n  ],\n},\n```\n\n## FAQ\n\n### Using Bootstrap mixins and variables\n\nYou should use `sass-resources-loader` in your `webpack` config.\n\nIn your `webpack.config.js`:\n```javascript\nmodule.exports = {\n\n  // stuff removed for clarity ...\n\n  module: {\n    loaders: [\n      // stuff removed for clarity ...\n      {\n        test: /\\.scss$/,\n        loader: ExtractTextPlugin.extract(\n          'style-loader',\n          'css-loader?modules&importLoaders=2&localIdentName=[name]__[local]__[hash:base64:5]' +\n          '!sass-loader' +\n          '!sass-resources-loader'\n        ),\n      },\n      // stuff removed for clarity ...\n    ],\n  },\n\n  // stuff removed for clarity ...\n\n  sassResources: './config/sass-resources.scss',\n}\n```\n\nAnd in your `./config/sass-resources.scss`:\n```\n// Make variables and mixins available when using CSS modules.\n@import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap/_variables\";\n@import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap/_mixins\";\n```\n\nYou can then use mixins and variables from Bootstrap in your own code.\n\n### Using a custom location for bootstrap module\n\nBy default, `bootstrap-loader` will try to resolve `bootstrap` from where `bootstrap-loader` has been installed. In [certain situations](https://github.com/shakacode/bootstrap-loader/issues/254) (e.g. npm linking, using a custom package installer) it may not be resolvable. In this case, you can pass in the location manually.\n\n```js\nrequire('bootstrap-loader?bootstrapPath=/path/to/bootstrap');\n\n// or\n\nentry: [ 'bootstrap-loader?bootstrapPath=/path/to/bootstrap', './app' ]\n```\n\n## Contributing\nSee [Contributing](CONTRIBUTING.md) to get started.\n\n## License\nMIT.\n\n## Examples and related libraries\n* [react-webpack-rails-tutorial](https://github.com/shakacode/react-webpack-rails-tutorial/), live example at [www.reactrails.com](http://www.reactrails.com/).\n* [sass-resources-loader](https://github.com/shakacode/sass-resources-loader/)\n* [Simple integration example](./examples/basic)\n* [React + hot reloading example: bootstrap-loader-css-modules-example](./examples/css-modules)\n* [react_on_rails gem](https://github.com/shakacode/react_on_rails)\n\n## Useful Q&A\n* [Using CSS modules with Bootstrap](https://github.com/shakacode/bootstrap-loader/issues/9)\n* [How would you use bootstrap styles to build css module styles](https://github.com/shakacode/bootstrap-loader/issues/12)\n\nWe'll identify issues that are [questions](https://github.com/shakacode/bootstrap-loader/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aquestion).\n\n---\n\nAloha from Justin Gordon ([bio](http://www.railsonmaui.com/about)) and the [ShakaCode](http://www.shakacode.com) Team! We're actively looking for new projects involving React, React-Native, and Rails. Please contact me at [justin@shakacode.com](mailto:justin@shakacode.com) if we could potentially help you in any way. Besides consulting on bigger projects, [ShakaCode](http://www.shakacode.com) is doing Skype plus Slack/Github based coaching for React on Rails. See our blog post [Can ShakaCode Help You?](https://blog.shakacode.com/can-shakacode-help-you-4a5b1e5a8a63#.jex6tg9w9) for more information.\n\nWe're offering a free half-hour project consultation, on anything from React on Rails to any aspect of web application development for both consumer and enterprise products. In addition to React.js and Rails, we're doing React-Native iOS and Android apps!\n\nWhether you have a new project or need help on an existing project, feel free to contact me directly at [justin@shakacode.com](mailto:justin@shakacode.com) and thanks in advance for any referrals!\n\nYour support keeps this project going.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shakacode/bootstrap-loader.git"
  },
  "scripts": {
    "build": "babel --out-dir lib src",
    "clean": "rm -rf lib",
    "dev": "babel --watch --out-dir lib src",
    "lint": "eslint --ext .js .",
    "prepublish": "npm run prerelease",
    "prerelease": "npm run lint && npm run clean && npm run build",
    "preversion": "npm run prerelease",
    "release:major": "scripts/release major",
    "release:minor": "scripts/release minor",
    "release:patch": "scripts/release patch",
    "start": "npm run lint && npm run clean && npm run dev",
    "test": "babel-tape-runner node_package/tests/**/*.test.js | tap-spec"
  },
  "version": "2.1.0"
}
